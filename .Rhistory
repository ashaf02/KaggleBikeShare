setwd("C:/Users/amand/OneDrive/Desktop/Fall 2023/STAT348/KaggleBikeShare")
##Libraries
library(tidyverse)
library(tidymodels)
library(vroom)
library(recipes)
library(dplyr)
library(tibble)
##Read in the Data
bike <- vroom("train.csv")
test <- vroom("test.csv")
##Cleaning
bike_cleaned <- bike %>%
mutate(weather = ifelse(weather == 4, 3, weather))%>%
select(-casual, -registered)
##Feature Engineering
my_formula <- count ~ datetime + season + holiday + workingday + weather + temp + atemp + humidity + windspeed
my_recipe <- recipe(my_formula, data = bike_cleaned) %>%
# Convert 'season', 'holiday', 'workingday', and 'weather' to factors
step_mutate(
season = factor(season, levels = c(1, 2, 3, 4), labels = c("spring", "summer", "fall", "winter")),
holiday = factor(holiday, levels = c(0, 1), labels = c("no", "yes")),
workingday = factor(workingday, levels = c(0, 1), labels = c("no", "yes")),
weather = factor(weather, levels = c(1, 2, 3), labels = c("Clear", "Mist", "Light Rain"))
)
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataSet14
bake(prepped_recipe, new_data=test)
##Linear Regression
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = bike_cleaned)
#Create predictions
bike_predictions <- predict(bike_workflow,
new_data=test)
# Change 'NA' predictions to 0
bike_predictions <- mutate(bike_predictions, .pred = ifelse(is.na(.pred), 0, .pred))
# Round negative predictions to 0
bike_predictions <- mutate(bike_predictions,
.pred = ifelse(.pred < 0, 0, .pred))
# Write the submission CSV file using vroom::vroom_write with column names
vroom::vroom_write(submission_df, "mytest4.csv")
#Format properly
submission_df <- tibble(
datetime = format(test$datetime, "%Y-%m-%d %H:%M:%S"),  # Assuming 'datetime' is a column in your 'test' data frame
count = bike_predictions$.pred
)
# Write the submission CSV file using vroom::vroom_write with column names
vroom::vroom_write(submission_df, "mytest4.csv")
#Format properly
submission_df <- tibble(
datetime = format(test$datetime, "%Y-%m-%d %H:%M:%S"),  # Assuming 'datetime' is a column in your 'test' data frame
count = bike_predictions$.pred
)
# Write the submission CSV file using vroom::vroom_write with column names
write.csv(submission_df, file = "mytest6.csv", row.names = FALSE)
#Format properly
submission_df <- tibble(
datetime = format(test$datetime, "%Y-%m-%d %H:%M:%S"),  # Assuming 'datetime' is a column in your 'test' data frame
count = bike_predictions$.pred
)
# Write the submission CSV file using vroom::vroom_write with column names
write.csv(submission_df, file = "mytest5.csv", row.names = FALSE)
bike_predictions$datetime <- as.character(format(bike_predictions@datetime))
# Change 'NA' predictions to 0
bike_predictions <- mutate(bike_predictions, .pred = ifelse(is.na(.pred), 0, .pred))
# Round negative predictions to 0
bike_predictions <- mutate(bike_predictions,
.pred = ifelse(.pred < 0, 0, .pred))
bike_predictions$datetime <- as.character(format(bike_predictions@datetime))
bike_predictions$datetime <- as.character(format(bike_predictions$datetime))
submission_df$datetime <- as.character(format(submision_df$datetime))
##Read in the Data
bike <- vroom("train.csv")
test <- vroom("test.csv")
##Cleaning
bike_cleaned <- bike %>%
mutate(weather = ifelse(weather == 4, 3, weather))%>%
select(-casual, -registered)
##Feature Engineering
my_formula <- count ~ datetime + season + holiday + workingday + weather + temp + atemp + humidity + windspeed
my_recipe <- recipe(my_formula, data = bike_cleaned) %>%
# Convert 'season', 'holiday', 'workingday', and 'weather' to factors
step_mutate(
season = factor(season, levels = c(1, 2, 3, 4), labels = c("spring", "summer", "fall", "winter")),
holiday = factor(holiday, levels = c(0, 1), labels = c("no", "yes")),
workingday = factor(workingday, levels = c(0, 1), labels = c("no", "yes")),
weather = factor(weather, levels = c(1, 2, 3), labels = c("Clear", "Mist", "Light Rain"))
)
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataSet14
bake(prepped_recipe, new_data=test)
##Linear Regression
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = bike_cleaned)
#Create predictions
bike_predictions <- predict(bike_workflow,
new_data=test)
# Change 'NA' predictions to 0
bike_predictions <- mutate(bike_predictions, .pred = ifelse(is.na(.pred), 0, .pred))
# Round negative predictions to 0
bike_predictions <- mutate(bike_predictions,
.pred = ifelse(.pred < 0, 0, .pred))
#Format properly
submission_df <- tibble(
datetime = format(test$datetime),
count = bike_predictions$.pred
)
submission_df$datetime <- as.character(format(submision_df$datetime))
#Format properly
submission_df <- tibble(
datetime = as.character(format(test$datetime)),
count = bike_predictions$.pred
)
##Read in the Data
bike <- vroom("train.csv")
test <- vroom("test.csv")
##Cleaning
bike_cleaned <- bike %>%
mutate(weather = ifelse(weather == 4, 3, weather))%>%
select(-casual, -registered)
##Feature Engineering
my_formula <- count ~ datetime + season + holiday + workingday + weather + temp + atemp + humidity + windspeed
my_recipe <- recipe(my_formula, data = bike_cleaned) %>%
# Convert 'season', 'holiday', 'workingday', and 'weather' to factors
step_mutate(
season = factor(season, levels = c(1, 2, 3, 4), labels = c("spring", "summer", "fall", "winter")),
holiday = factor(holiday, levels = c(0, 1), labels = c("no", "yes")),
workingday = factor(workingday, levels = c(0, 1), labels = c("no", "yes")),
weather = factor(weather, levels = c(1, 2, 3), labels = c("Clear", "Mist", "Light Rain"))
)
prepped_recipe <- prep(my_recipe) # Sets up the preprocessing using myDataSet14
bake(prepped_recipe, new_data=test)
##Linear Regression
my_mod <- linear_reg() %>%
set_engine("lm")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(my_mod) %>%
fit(data = bike_cleaned)
#Create predictions
bike_predictions <- predict(bike_workflow,
new_data=test)
# Change 'NA' predictions to 0
bike_predictions <- mutate(bike_predictions, .pred = ifelse(is.na(.pred), 0, .pred))
# Round negative predictions to 0
bike_predictions <- mutate(bike_predictions,
.pred = ifelse(.pred < 0, 0, .pred))
#Format properly
submission_df <- tibble(
datetime = as.character(format(test$datetime)),
count = bike_predictions$.pred
)
# Write the submission CSV file using vroom::vroom_write with column names
vroom::vroom_write(submission_df, "mytest8.csv")
# Write the submission CSV file using vroom::vroom_write with column names
vroom::vroom_write(submission_df, "mytest8.csv", delim = ",")
# Write the submission CSV file using vroom::vroom_write with column names
vroom::vroom_write(submission_df, "mytest9.csv", delim = ",")
